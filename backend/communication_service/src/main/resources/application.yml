spring:
  application:
    name: communication-service
  datasource:
    url: jdbc:mysql://localhost:3306/Communication_Service?createDatabaseIfNotExist=true
    username: root
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 600000
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  profiles:
    active: dev
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:wandimayew8@gmail.com} # Use env var with default
    password: ${MAIL_PASSWORD:jrbt rotv xjwz tfqk}  # Use env var with default (secure this!)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
        debug: true
  rabbitmq:
    host: localhost # Use Docker service name
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

server:
  port: 8084

user:
  management:
    service:
      url: http://localhost:8080

communication:
  service:
    token: this-is-me-do-you-remember-me

app:
  jwtSecret: zWR3i+mURw4kppEwVNhxZdqblotfvWseQGKI1SdLI9Y=
  jwtExpirationMs: 86400000 # 24 hours in milliseconds
  
cloudinary:
  cloud-name: dcpehgnee
  api-key: 843599552916561
  api-secret: ${CLOUDINARY_API_SECRET:D6q2oDpQf-NJdyqhKv8NJhl6k9k} # Secure this via env var

eureka:
  client:
    serviceUrl:
      # defaultZone: ${SERVICE_REGISTRY_URL}/eureka/
      defaultZone: http://localhost:8761/eureka
    enabled: true  # URL of the Eureka Server
    registerWithEureka: true  # Register this client with Eureka
    fetchRegistry: true 
  instance:
    # hostname: ${EUREKA_INSTANCE_HOSTNAME}
    hostname: localhost
    prefer-ip-address: false
